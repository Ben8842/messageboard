[{"C:\\Users\\DDLACourse\\newprojects\\wheelticket\\src\\index.js":"1","C:\\Users\\DDLACourse\\newprojects\\wheelticket\\src\\App.js":"2","C:\\Users\\DDLACourse\\newprojects\\wheelticket\\src\\reportWebVitals.js":"3","C:\\Users\\DDLACourse\\newprojects\\messageboard\\wheelticket\\src\\index.js":"4","C:\\Users\\DDLACourse\\newprojects\\messageboard\\wheelticket\\src\\App.js":"5","C:\\Users\\DDLACourse\\newprojects\\messageboard\\wheelticket\\src\\reportWebVitals.js":"6","C:\\users\\ddlacourse\\newprojects\\messageboard\\wheelticket\\src\\index.js":"7","C:\\users\\ddlacourse\\newprojects\\messageboard\\wheelticket\\src\\App.js":"8","C:\\users\\ddlacourse\\newprojects\\messageboard\\wheelticket\\src\\reportWebVitals.js":"9","C:\\users\\ddlacourse\\newprojects\\messageboard\\wheelticket\\src\\actions\\userActions.js":"10","C:\\users\\ddlacourse\\newprojects\\messageboard\\wheelticket\\src\\actions\\types.js":"11","C:\\users\\ddlacourse\\newprojects\\messageboard\\wheelticket\\src\\store.js":"12","C:\\users\\ddlacourse\\newprojects\\messageboard\\wheelticket\\src\\reducers\\index.js":"13","C:\\users\\ddlacourse\\newprojects\\messageboard\\wheelticket\\src\\reducers\\userReducer.js":"14"},{"size":500,"mtime":1606164290268,"results":"15","hashOfConfig":"16"},{"size":4674,"mtime":1612564674942,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1606164290268,"results":"18","hashOfConfig":"16"},{"size":517,"mtime":1612565312470,"results":"19","hashOfConfig":"20"},{"size":6083,"mtime":1612730433655,"results":"21","hashOfConfig":"20"},{"size":375,"mtime":1612565312484,"results":"22","hashOfConfig":"20"},{"size":835,"mtime":1614369695497,"results":"23","hashOfConfig":"24"},{"size":14501,"mtime":1614448507846,"results":"25","hashOfConfig":"24"},{"size":375,"mtime":1612565312484,"results":"26","hashOfConfig":"24"},{"size":269,"mtime":1614369387460,"results":"27","hashOfConfig":"24"},{"size":162,"mtime":1614367703370,"results":"28","hashOfConfig":"24"},{"size":804,"mtime":1614375512561,"results":"29","hashOfConfig":"24"},{"size":150,"mtime":1614369383878,"results":"30","hashOfConfig":"24"},{"size":649,"mtime":1614376762100,"results":"31","hashOfConfig":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"sv5i79",{"filePath":"35","messages":"36","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},"1923jrp",{"filePath":"42","messages":"43","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},"1oaj6m0",{"filePath":"50","messages":"51","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"49"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\DDLACourse\\newprojects\\wheelticket\\src\\index.js",[],["65","66"],"C:\\Users\\DDLACourse\\newprojects\\wheelticket\\src\\App.js",["67","68","69","70","71","72","73"],"C:\\Users\\DDLACourse\\newprojects\\wheelticket\\src\\reportWebVitals.js",[],"C:\\Users\\DDLACourse\\newprojects\\messageboard\\wheelticket\\src\\index.js",[],["74","75"],"C:\\Users\\DDLACourse\\newprojects\\messageboard\\wheelticket\\src\\App.js",["76","77","78","79","80","81","82","83","84"],"import logo from \"./logo.svg\";\r\nimport \"./App.css\";\r\nimport React from \"react\";\r\n\r\nclass MovieForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      movieName: \"\",\r\n      count: 0,\r\n      method: \"\",\r\n      overName: \"theName\",\r\n      dbcontainer: [],\r\n      newA: [],\r\n      showButtonIndex: 0,\r\n      chars_left: 400,\r\n      datePush: \"\",\r\n      newADater: [],\r\n      text: \"\",\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.clickHandler();\r\n  }\r\n\r\n  getMovieList() {\r\n    var { dbcontainer, newA, datePush, newADater } = this.state;\r\n    fetch(\"http://localhost:5000/users\", {\r\n      method: \"GET\",\r\n      mode: \"cors\",\r\n      cache: \"no-cache\",\r\n      credentials: \"same-origin\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      referrerPolicy: \"no-referrer\",\r\n    })\r\n      .then((res) => {\r\n        console.log(JSON.stringify(res) + \".thenres\");\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        this.setState((prevState) => ({\r\n          newADater: [...prevState.newADater, data[0].updatedAt],\r\n          dbcontainer: data,\r\n          newA: data[0].movieNames,\r\n        }));\r\n\r\n        console.log(data);\r\n        console.log(\"getData data data\");\r\n      });\r\n  }\r\n\r\n  clickRemover = (e) => {\r\n    var { dbcontainer, newA, showButtonIndex, newADater } = this.state;\r\n    this.setState({\r\n      showButtonIndex: e.target.id,\r\n    });\r\n    var holder = newA[e.target.id];\r\n    var timeholder = newADater[e.target.id];\r\n    console.log(JSON.stringify({ holder, showButtonIndex }));\r\n    console.log(\"remove now!\");\r\n    fetch(\"http://localhost:5000/users\", {\r\n      method: \"POST\",\r\n      mode: \"cors\",\r\n      cache: \"no-cache\",\r\n      credentials: \"same-origin\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      referrerPolicy: \"no-referrer\",\r\n      body: JSON.stringify({ holder, showButtonIndex, timeholder }),\r\n    }).then((res) => {\r\n      console.log(\"something happening here\" + res);\r\n    });\r\n\r\n    this.clickHandler();\r\n  };\r\n\r\n  clickHandler = () => {\r\n    console.log(\"component did mount woo hoo\");\r\n    this.getMovieList();\r\n    var { dbcontainer } = this.state;\r\n    console.log(JSON.stringify({ dbcontainer }));\r\n    console.log(\"helo clickHandler\");\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    const { movieName, method, overName } = this.state;\r\n    let name = event.target.name;\r\n    let value = event.target.value;\r\n    console.log(name);\r\n    console.log(value);\r\n    this.setState({ [name]: value, chars_left: 400 - value.length });\r\n  };\r\n\r\n  handleSubmit(event) {\r\n    //alert(\"submission incoming\" + this.state.movieName);\r\n    event.preventDefault();\r\n    const { movieName, method, overName } = this.state;\r\n    console.log(\"body is\" + { movieName } + { method } + { overName });\r\n\r\n    fetch(\"http://localhost:5000/users\", {\r\n      method: \"POST\",\r\n      mode: \"cors\",\r\n      cache: \"no-cache\",\r\n      credentials: \"same-origin\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      referrerPolicy: \"no-referrer\",\r\n      body: JSON.stringify({ movieName, method, overName }),\r\n    }).then((res) => {\r\n      console.log(\"something happening here\" + res);\r\n    });\r\n    this.clickHandler();\r\n  }\r\n\r\n  render() {\r\n    var { dbcontainer, newA, chars_left, newADater } = this.state;\r\n    console.log(dbcontainer[0]);\r\n\r\n    console.log(\"OK???\");\r\n    console.log(newA);\r\n    console.log(\"reallyOK???\");\r\n    const superDBdisplay = (\r\n      <div>\r\n        <p>The Wall of Messages begins here!</p>\r\n        {newA.map((item, index) => (\r\n          <div>\r\n            <div id=\"messagetime\" key={index}>\r\n              <span key={index}>\r\n                {newA[newA.length - index - 1]}{\" \"}\r\n                <div>\r\n                  <span id=\"timestamp\">\r\n                    Timestamp: {newADater[newA.length - index - 1]}\r\n                  </span>\r\n\r\n                  <button\r\n                    type=\"button\"\r\n                    id={newA.length - index - 1}\r\n                    key={index}\r\n                    class=\"buttontools\"\r\n                    onClick={(e) => this.clickRemover(e)}\r\n                  >\r\n                    delete\r\n                  </button>\r\n                  <button class=\"buttontools\">upvote</button>\r\n                  <button class=\"buttontools\">downvote</button>\r\n                </div>\r\n              </span>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n    /*\r\n    const unusedIdeas = (\r\n      <div>\r\n      <p>Enter the watching method. </p>\r\n        <input type=\"text\" name=\"method\" onChange={this.handleChange} />\r\n        <h3>The watching method is {this.state.method}</h3>\r\n        <input type=\"text\" name=\"overName\" onChange={this.handleChange} />\r\n        <h4>your Over Name is going to be {this.state.overName}</h4>\r\n        <button type=\"button\" onClick={this.clickHandler}>\r\n          get this going\r\n        </button>\r\n         <h1> {this.state.movieName}</h1>\r\n      </div>\r\n    );\r\n*/\r\n    return (\r\n      <form id=\"marginy\">\r\n        <div class=\"authy\">\r\n          <button class=\"buttontools\">log in</button>\r\n          <button class=\"buttontools\">sign up</button>\r\n        </div>\r\n        <h1>Message Board</h1>\r\n        {chars_left}\r\n        <textarea\r\n          id=\"fancy\"\r\n          autofocus=\"true\"\r\n          maxlength=\"400\"\r\n          rows=\"5\"\r\n          cols=\"40\"\r\n          type=\"text\"\r\n          placeholder=\"enter a message for the Message Board\"\r\n          name=\"movieName\"\r\n          onChange={this.handleChange}\r\n        />\r\n        <button\r\n          type=\"button\"\r\n          class=\"buttontools\"\r\n          name=\"submit\"\r\n          onClick={this.handleSubmit}\r\n        >\r\n          submit\r\n        </button>\r\n\r\n        {superDBdisplay}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <div id=\"marginy\">\r\n        <MovieForm />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\DDLACourse\\newprojects\\messageboard\\wheelticket\\src\\reportWebVitals.js",[],"C:\\users\\ddlacourse\\newprojects\\messageboard\\wheelticket\\src\\index.js",[],["85","86"],"C:\\users\\ddlacourse\\newprojects\\messageboard\\wheelticket\\src\\App.js",["87","88","89","90","91","92"],"import \"./App.css\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { login } from \"./actions/userActions.js\";\r\nimport { logout } from \"./actions/userActions.js\";\r\n//import GoogleLogin from \"react-google-login\";\r\n\r\nclass MessageForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      messageContent: \"\",\r\n      showButtonIndex: 0,\r\n      chars_left: 400,\r\n      text: \"\",\r\n      authStep: 1,\r\n      messageholder: [],\r\n      email: \"\",\r\n      password: \"\",\r\n      login: false,\r\n    };\r\n\r\n    this.handleChangeX = this.handleChangeX.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.clickHandler();\r\n    this.getList();\r\n  }\r\n\r\n  componentDidMount() {\r\n    const user = JSON.parse(localStorage.getItem(\"user\"));\r\n    console.log(user);\r\n    //let loggedin = typeof user === \"object\";\r\n\r\n    if (user !== null) {\r\n      this.props.login(user.data);\r\n      this.setState({ authStep: 4 });\r\n    }\r\n  }\r\n\r\n  handleChangeX(event) {\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  }\r\n\r\n  upVote = (e) => {\r\n    const { email } = this.state;\r\n    console.log(this.state.emailtext);\r\n    /*this.setState({\r\n      showButtonIndex: e.target.id,\r\n    });*/\r\n\r\n    // console.log(JSON.stringify({ showButtonIndex }));\r\n    console.log(\"upvote now\");\r\n    fetch(\"http://localhost:5000/messages/\" + e.target.id, {\r\n      method: \"PATCH\",\r\n      mode: \"cors\",\r\n      cache: \"no-cache\",\r\n      credentials: \"same-origin\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      referrerPolicy: \"no-referrer\",\r\n      body: JSON.stringify({ email }),\r\n      //   body: JSON.stringify({ showButtonIndex }),\r\n    }).then((res) => {\r\n      console.log(res);\r\n      //    console.log(\"something happening here\" + res);\r\n    });\r\n\r\n    console.log(\"hello upvote\");\r\n    //this.clickHandler();\r\n  };\r\n\r\n  clickHandler = () => {\r\n    //  console.log(\"component did mount\");\r\n    this.getList();\r\n    //   console.log(\"helo clickHandler\");\r\n  };\r\n\r\n  submitSignUp() {\r\n    //. console.log(\"submit Sign Up now\");\r\n    const { email, password } = this.state;\r\n    //  console.log(JSON.stringify({ email, password }));\r\n    fetch(\"http://localhost:5000/userprofiles\", {\r\n      method: \"POST\",\r\n      mode: \"cors\", // no-cors, *cors, same-origin\r\n      cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\r\n      credentials: \"same-origin\", // include, *same-origin, omit\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        // 'Content-Type': 'application/x-www-form-urlencoded',\r\n      },\r\n      referrerPolicy: \"no-referrer\", // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\r\n      body: JSON.stringify({ email, password }),\r\n      // body data type must match \"Content-Type\" header\r\n    })\r\n      .then((res) => {\r\n        //   console.log(\"trigger\");\r\n        if (res.status === 400) {\r\n          return res.text();\r\n        }\r\n        //if (res.status === 201) {\r\n        else {\r\n          return;\r\n        }\r\n      })\r\n      .then((data) => {\r\n        if (typeof data === \"string\") {\r\n          console.log(\"duplicate user detected\");\r\n          // this.props.createModalError(data);\r\n        }\r\n        //if (typeof data === \"object\") {\r\n        else {\r\n          console.log(\"new user saved!\");\r\n          this.setState({\r\n            successfulSave: true,\r\n            authStep: 5,\r\n            email: \"\",\r\n            password: \"\",\r\n          });\r\n          //  this.closeModal();\r\n        }\r\n      });\r\n  }\r\n\r\n  submitLogIn() {\r\n    const { email, password } = this.state;\r\n    fetch(\"http://localhost:5000/authenticate\", {\r\n      method: \"POST\", // *GET, POST, PUT, DELETE, etc.\r\n      mode: \"cors\", // no-cors, *cors, same-origin\r\n      cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\r\n      credentials: \"same-origin\", // include, *same-origin, omit\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        // 'Content-Type': 'application/x-www-form-urlencoded',\r\n      },\r\n      referrerPolicy: \"no-referrer\", // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\r\n      body: JSON.stringify({ email, password }),\r\n      // body data type must match \"Content-Type\" header\r\n    })\r\n      .then((res) => {\r\n        if (res.status === 400) {\r\n          return res.text();\r\n        }\r\n        if (res.status === 200) {\r\n          return res.json();\r\n        }\r\n      })\r\n      .then((data) => {\r\n        if (typeof data === \"string\") {\r\n          console.log(data);\r\n          //   console.log(\"message hello\");\r\n          // this.props.createModalError(data);\r\n        }\r\n        if (typeof data === \"object\") {\r\n          localStorage.setItem(\"user\", JSON.stringify(data));\r\n          console.log(data);\r\n          console.log(\"log in user\");\r\n          // this.setState(data);\r\n          /*this.setState({\r\n            loggedin: true,\r\n            username: data.username,\r\n            data: data,\r\n          });*/\r\n\r\n          //redux step below (this.props.login(data))\r\n          //this.props.login(data);\r\n\r\n          this.setState({\r\n            loggedin: true,\r\n            email: data.email,\r\n            data: data,\r\n            authStep: 4,\r\n          });\r\n          this.props.login(data);\r\n          console.log(\"login REDUX\");\r\n          console.log(data);\r\n        }\r\n      });\r\n  }\r\n\r\n  logOut() {\r\n    this.setState((state) => ({ authStep: 1, email: \"\" }));\r\n    this.props.logout();\r\n    console.log(\"redux logout\");\r\n  }\r\n\r\n  loginClick() {\r\n    this.setState((state) => ({ authStep: 2 }));\r\n  }\r\n\r\n  signupClick() {\r\n    this.setState((state) => ({ authStep: 3 }));\r\n    // console.log(this.state.authStep);\r\n  }\r\n\r\n  getList() {\r\n    fetch(\"http://localhost:5000/messages\", {\r\n      method: \"GET\",\r\n      mode: \"cors\",\r\n      cache: \"no-cache\",\r\n      credentials: \"same-origin\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      referrerPolicy: \"no-referrer\",\r\n    })\r\n      .then((res) => {\r\n        //    console.log(JSON.stringify(res) + \".thenres\");\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        console.log(data);\r\n        //  console.log(\"wild\");\r\n        this.setState({\r\n          messageholder: data,\r\n        });\r\n\r\n        console.log(data);\r\n        //  console.log(\"getData data data\");\r\n      });\r\n  }\r\n\r\n  clickRemover = (e) => {\r\n    this.setState({\r\n      showButtonIndex: e.target.id,\r\n    });\r\n\r\n    // console.log(JSON.stringify({ showButtonIndex }));\r\n    console.log(\"remove now!\");\r\n    fetch(\"http://localhost:5000/messages/\" + e.target.id, {\r\n      method: \"DELETE\",\r\n      mode: \"cors\",\r\n      cache: \"no-cache\",\r\n      credentials: \"same-origin\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      referrerPolicy: \"no-referrer\",\r\n      //   body: JSON.stringify({ showButtonIndex }),\r\n    }).then((res) => {\r\n      //    console.log(\"something happening here\" + res);\r\n    });\r\n\r\n    this.clickHandler();\r\n  };\r\n\r\n  clickHandler = () => {\r\n    //  console.log(\"component did mount\");\r\n    this.getList();\r\n    //   console.log(\"helo clickHandler\");\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    let name = event.target.name;\r\n    let value = event.target.value;\r\n    //  console.log(name);\r\n    //  console.log(value);\r\n    this.setState({ [name]: value, chars_left: 400 - value.length });\r\n  };\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    //  console.log(\"handleSubmit TIMEZ\");\r\n    const { messageContent } = this.state;\r\n    //  console.log(\"body is\" + { messageContent } + { email });\r\n\r\n    fetch(\"http://localhost:5000/messages\", {\r\n      method: \"POST\",\r\n      mode: \"cors\",\r\n      cache: \"no-cache\",\r\n      credentials: \"same-origin\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      referrerPolicy: \"no-referrer\",\r\n      body: JSON.stringify({\r\n        text: messageContent,\r\n        emailtext: this.props.user.emailR,\r\n      }),\r\n    }).then((res) => {\r\n      //   console.log(\"something happening here\" + res);\r\n    });\r\n    this.clickHandler();\r\n  }\r\n\r\n  render() {\r\n    var { chars_left, authStep, messageholder } = this.state;\r\n    //  console.log(this.state.email);\r\n    //  console.log(this.state.passowrd);\r\n    // console.log(\"OK???\");\r\n    //  console.log(\"reallyOK???\");\r\n    const anonymoususer = <span>anonymous &nbsp;&nbsp;&nbsp;</span>;\r\n\r\n    const superDBdisplay = (\r\n      <div>\r\n        <p>Messages are shown here below. </p>\r\n        {messageholder.map((item, index) => (\r\n          <div>\r\n            <div id=\"messagetime\" key={index}>\r\n              <span key={index}>\r\n                {item.text}\r\n                <div>\r\n                  <div id=\"timestamp\">\r\n                    <span id=\"timestamp\">\r\n                      Author: &nbsp;\r\n                      {item.emailtext == \"\" ? anonymoususer : item.emailtext}\r\n                    </span>\r\n                  </div>\r\n\r\n                  <div id=\"timestamp\">\r\n                    <span id=\"timestamp\">Timestamp: {item.createdAt}</span>\r\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                  </div>\r\n                  <div id=\"uptime\">\r\n                    <button\r\n                      type=\"button\"\r\n                      id={item._id}\r\n                      key={index}\r\n                      class=\"buttontools\"\r\n                      onClick={(e) => this.clickRemover(e)}\r\n                    >\r\n                      delete\r\n                    </button>\r\n                    &nbsp;&nbsp;\r\n                    <button\r\n                      type=\"button\"\r\n                      class=\"buttontools\"\r\n                      id={item._id}\r\n                      key={index}\r\n                      onClick={(e) => this.upVote(e)}\r\n                    >\r\n                      upvote\r\n                    </button>\r\n                    &nbsp;&nbsp;\r\n                    <button class=\"buttontools\">downvote</button>&nbsp;&nbsp;\r\n                  </div>\r\n                </div>\r\n              </span>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n\r\n    const authStepOne = (\r\n      <div class=\"authy\">\r\n        <button\r\n          class=\"buttontools\"\r\n          type=\"button\"\r\n          onClick={this.loginClick.bind(this)}\r\n        >\r\n          log in\r\n        </button>\r\n        &nbsp;&nbsp;\r\n        <button\r\n          class=\"buttontools\"\r\n          type=\"button\"\r\n          onClick={this.signupClick.bind(this)}\r\n        >\r\n          sign up\r\n        </button>\r\n      </div>\r\n    );\r\n\r\n    const authStepTwo = (\r\n      <div class=\"authy\">\r\n        <form>\r\n          Log in here &nbsp;&nbsp;&nbsp;\r\n          <input\r\n            class=\"buttontools\"\r\n            name=\"email\"\r\n            placeholder=\"EMAIL\"\r\n            type=\"text\"\r\n            value={this.state.email}\r\n            onChange={this.handleChangeX}\r\n          />\r\n          <input\r\n            class=\"buttontools\"\r\n            name=\"password\"\r\n            placeholder=\"PASSWORD\"\r\n            type=\"text\"\r\n            value={this.state.password}\r\n            onChange={this.handleChangeX}\r\n          />\r\n          <button\r\n            type=\"button\"\r\n            class=\"buttontools\"\r\n            name=\"submit\"\r\n            onClick={() => this.submitLogIn()}\r\n          >\r\n            submit\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n\r\n    const authStepThree = (\r\n      <div class=\"authy\">\r\n        <form>\r\n          Sign up here &nbsp;&nbsp;&nbsp;\r\n          <input\r\n            class=\"buttontools\"\r\n            name=\"email\"\r\n            placeholder=\"EMAIL\"\r\n            type=\"text\"\r\n            value={this.state.email}\r\n            onChange={this.handleChangeX}\r\n          />\r\n          <input\r\n            class=\"buttontools\"\r\n            name=\"password\"\r\n            placeholder=\"PASSWORD\"\r\n            type=\"text\"\r\n            value={this.state.password}\r\n            onChange={this.handleChangeX}\r\n          />\r\n          <button\r\n            type=\"button\"\r\n            class=\"buttontools\"\r\n            name=\"submit\"\r\n            onClick={() => this.submitSignUp()}\r\n          >\r\n            submit\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n\r\n    const authStepFour = (\r\n      <div class=\"authy\">\r\n        Welcome {this.props.user.emailR}. &nbsp;&nbsp;&nbsp;\r\n        <button\r\n          type=\"button\"\r\n          class=\"buttontools\"\r\n          name=\"submit\"\r\n          onClick={this.logOut.bind(this)}\r\n        >\r\n          Log out.\r\n        </button>\r\n      </div>\r\n    );\r\n\r\n    const authStepFive = (\r\n      <div class=\"authy\">\r\n        <button\r\n          type=\"button\"\r\n          class=\"buttontools\"\r\n          name=\"submit\"\r\n          onClick={this.loginClick.bind(this)}\r\n        >\r\n          Thanks for signing up. Click here to Log in\r\n        </button>\r\n      </div>\r\n    );\r\n\r\n    return (\r\n      <form id=\"marginy\">\r\n        {this.props.user.isLoggedIn ? authStepFour : null}\r\n        {authStep == 1 ? authStepOne : null}\r\n        {authStep == 2 ? authStepTwo : null}\r\n        {authStep == 3 ? authStepThree : null}\r\n        {authStep == 5 ? authStepFive : null}\r\n        <h1 id=\"titleM\">Message Board</h1>\r\n        {chars_left}&nbsp;&nbsp;\r\n        <span id=\"textfancy\">\r\n          <textarea\r\n            id=\"fancy\"\r\n            autofocus=\"true\"\r\n            maxlength=\"400\"\r\n            rows=\"5\"\r\n            cols=\"40\"\r\n            type=\"text\"\r\n            placeholder=\"enter a message for the Message Board\"\r\n            name=\"messageContent\"\r\n            onChange={this.handleChange}\r\n          />\r\n        </span>\r\n        &nbsp;&nbsp;\r\n        <button\r\n          type=\"button\"\r\n          class=\"buttontoolsS\"\r\n          name=\"submit\"\r\n          onClick={this.handleSubmit}\r\n        >\r\n          submit\r\n        </button>\r\n        {superDBdisplay}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <div id=\"marginy\">\r\n        <MessageForm />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n//export default App;\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.user,\r\n});\r\n\r\nexport default connect(mapStateToProps, { login, logout })(MessageForm);\r\n","C:\\users\\ddlacourse\\newprojects\\messageboard\\wheelticket\\src\\reportWebVitals.js",[],"C:\\users\\ddlacourse\\newprojects\\messageboard\\wheelticket\\src\\actions\\userActions.js",[],"C:\\users\\ddlacourse\\newprojects\\messageboard\\wheelticket\\src\\actions\\types.js",[],"C:\\users\\ddlacourse\\newprojects\\messageboard\\wheelticket\\src\\store.js",[],"C:\\users\\ddlacourse\\newprojects\\messageboard\\wheelticket\\src\\reducers\\index.js",[],"C:\\users\\ddlacourse\\newprojects\\messageboard\\wheelticket\\src\\reducers\\userReducer.js",[],{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":1,"column":8,"nodeType":"99","messageId":"100","endLine":1,"endColumn":12},{"ruleId":"97","severity":1,"message":"101","line":25,"column":11,"nodeType":"99","messageId":"100","endLine":25,"endColumn":22},{"ruleId":"97","severity":1,"message":"102","line":25,"column":24,"nodeType":"99","messageId":"100","endLine":25,"endColumn":28},{"ruleId":"97","severity":1,"message":"101","line":48,"column":11,"nodeType":"99","messageId":"100","endLine":48,"endColumn":22},{"ruleId":"97","severity":1,"message":"103","line":81,"column":13,"nodeType":"99","messageId":"100","endLine":81,"endColumn":22},{"ruleId":"97","severity":1,"message":"104","line":81,"column":24,"nodeType":"99","messageId":"100","endLine":81,"endColumn":30},{"ruleId":"97","severity":1,"message":"105","line":81,"column":32,"nodeType":"99","messageId":"100","endLine":81,"endColumn":40},{"ruleId":"93","replacedBy":"106"},{"ruleId":"95","replacedBy":"107"},{"ruleId":"97","severity":1,"message":"98","line":1,"column":8,"nodeType":"99","messageId":"100","endLine":1,"endColumn":12},{"ruleId":"97","severity":1,"message":"101","line":29,"column":11,"nodeType":"99","messageId":"100","endLine":29,"endColumn":22},{"ruleId":"97","severity":1,"message":"102","line":29,"column":24,"nodeType":"99","messageId":"100","endLine":29,"endColumn":28},{"ruleId":"97","severity":1,"message":"108","line":29,"column":30,"nodeType":"99","messageId":"100","endLine":29,"endColumn":38},{"ruleId":"97","severity":1,"message":"109","line":29,"column":40,"nodeType":"99","messageId":"100","endLine":29,"endColumn":49},{"ruleId":"97","severity":1,"message":"101","line":57,"column":11,"nodeType":"99","messageId":"100","endLine":57,"endColumn":22},{"ruleId":"97","severity":1,"message":"103","line":91,"column":13,"nodeType":"99","messageId":"100","endLine":91,"endColumn":22},{"ruleId":"97","severity":1,"message":"104","line":91,"column":24,"nodeType":"99","messageId":"100","endLine":91,"endColumn":30},{"ruleId":"97","severity":1,"message":"105","line":91,"column":32,"nodeType":"99","messageId":"100","endLine":91,"endColumn":40},{"ruleId":"93","replacedBy":"110"},{"ruleId":"95","replacedBy":"111"},{"ruleId":"112","severity":1,"message":"113","line":310,"column":39,"nodeType":"114","messageId":"115","endLine":310,"endColumn":41},{"ruleId":"112","severity":1,"message":"113","line":463,"column":19,"nodeType":"114","messageId":"115","endLine":463,"endColumn":21},{"ruleId":"112","severity":1,"message":"113","line":464,"column":19,"nodeType":"114","messageId":"115","endLine":464,"endColumn":21},{"ruleId":"112","severity":1,"message":"113","line":465,"column":19,"nodeType":"114","messageId":"115","endLine":465,"endColumn":21},{"ruleId":"112","severity":1,"message":"113","line":466,"column":19,"nodeType":"114","messageId":"115","endLine":466,"endColumn":21},{"ruleId":"97","severity":1,"message":"116","line":497,"column":10,"nodeType":"99","messageId":"100","endLine":497,"endColumn":13},"no-native-reassign",["117"],"no-negated-in-lhs",["118"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'dbcontainer' is assigned a value but never used.","'newA' is assigned a value but never used.","'movieName' is assigned a value but never used.","'method' is assigned a value but never used.","'overName' is assigned a value but never used.",["117"],["118"],"'datePush' is assigned a value but never used.","'newADater' is assigned a value but never used.",["117"],["118"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'App' is defined but never used.","no-global-assign","no-unsafe-negation"]